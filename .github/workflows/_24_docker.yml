on:
  workflow_call:
    inputs:
      network:
        description: Network being released
        required: true
        type: string
      environment:
        description: Prod of dev
        required: true
        type: string
      publish_private_images:
        description: Publish private images
        type: boolean
        default: true
      publish_public_images:
        description: Publish public images
        type: boolean
        default: false
      save_tags:
        description: Use save
        type: string
        default: ""

permissions:
  contents: read
  packages: write

env:
  FORCE_COLOR: 1

jobs:
  get-date-time:
    runs-on: ubuntu-22.04
    outputs:
      date: ${{ steps.date.outputs.date }}
      time: ${{ steps.date.outputs.time }}
    steps:
      - name: Get the date and time
        id: date
        run: |
          echo "date=$(date +'%Y-%m-%d')" >> "$GITHUB_OUTPUT"
          echo "time=$(date +'%H:%M:%S')" >> "$GITHUB_OUTPUT"

  set-dockerfile-name:
    runs-on: ubuntu-22.04
    outputs:
      dockerfile_path: ${{ steps.dockerfile.outputs.dockerfile_path }}
    steps:
      - name: Set dockerfile name
        id: dockerfile
        run: |
          if [[ "${{ inputs.environment }}" == "production" || "${{ inputs.network }}" == "sisyphos" || "${{ inputs.network }}" == "perseverance" ]] ; then
            echo "dockerfile_path=ci/docker/production" >> "$GITHUB_OUTPUT"
          else
            echo "dockerfile_path=ci/docker/development" >> "$GITHUB_OUTPUT"
          fi

  private-images:
    needs: [get-date-time, set-dockerfile-name]
    strategy:
      fail-fast: false
      matrix:
        target:
          - chainflip-node
          - chainflip-engine
          - chainflip-cli
          - chainflip-broker-api
          - chainflip-lp-api
        docker-repo:
          - ghcr.io/${{ github.repository }}
        include:
          - docker-repo: ghcr.io/${{ github.repository }}
            registry: ghcr.io
            publish: ${{ inputs.publish_private_images }}
          - docker-repo: chainfliplabs
            registry: docker.io
            publish: ${{ inputs.publish_public_images }}
          - docker-repo: ghcr.io/${{ github.repository }}
            target: generate-genesis-keys
          - docker-repo: ghcr.io/${{ github.repository }}
            target: chainflip-ingress-egress-tracker
          - docker-repo: ghcr.io/${{ github.repository }}
            target: chainflip-engine-databases

    runs-on: ubuntu-22.04
    steps:
      - name: Checkout 🏁
        uses: actions/checkout@v3

      - name: Download binaries 📥
        uses: actions/download-artifact@v3
        with:
          name: chainflip-backend-bin-ubuntu-22.04

      - name: Set up QEMU 🧞
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx 🪄
        uses: docker/setup-buildx-action@v2

      - name: Docker meta 📄
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ matrix.docker-repo }}/${{ matrix.target }}
          flavor: |
            latest=true
          tags: |
            type=schedule,pattern={{date 'YYYY-MM-DD'}},prefix=nightly-
            type=pep440,pattern={{version}},prefix=${{ inputs.network }}-
            type=raw,value=${{ github.sha }}
            type=raw,value=${{ inputs.network }}
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr

      - name: Login to Github Container Registry 🔑
        if: matrix.registry == 'ghcr.io'
        uses: docker/login-action@v2
        with:
          registry: ${{ matrix.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to DockerHub 🔑
        if: matrix.registry == 'docker.io'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.CF_DOCKERHUB_USERNAME }}
          password: ${{ secrets.CF_DOCKERHUB_TOKEN }}

      - name: Build and push 🏗️🫸
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ matrix.publish }}
          load: ${{ inputs.save_tags != '' }}
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: ${{ needs.set-dockerfile-name.outputs.dockerfile_path }}/${{ matrix.target }}.Dockerfile
          build-args: |
            BUILD_DATETIME=${{ needs.get-date-time.outputs.date }} ${{ needs.get-date-time.outputs.time }}
            VCS_REF=${{ github.sha }}
            CHAINSPEC=${{ inputs.network }}

      - name: Save image 📦
        if: inputs.save_tags != ''
        run: >
          for tag in ${{ inputs.save_tags }}; do
            docker save ${{ matrix.docker-repo }}/${{ matrix.target }}:$tag -o ${{ matrix.target }}.tar
          done

      - name: Upload image 📤
        if: inputs.save_tags != ''
        uses: actions/upload-artifact@v2
        with:
          name: chainflip-backend-images
          path: ${{ matrix.target }}.tar
#
#  public-images:
#    if: inputs.publish_public_images
#    needs: [get-date-time, set-dockerfile-name]
#    strategy:
#      fail-fast: false
#      matrix:
#        target:
#          - chainflip-node
#          - chainflip-engine
#          - chainflip-cli
#          - chainflip-broker-api
#          - chainflip-lp-api
#        docker-repo:
#          - chainfliplabs
#    runs-on: ubuntu-22.04
#    steps:
#      - name: Checkout 🏁
#        uses: actions/checkout@v3
#
#      - name: Download binaries 📥
#        uses: actions/download-artifact@v3
#        with:
#          name: chainflip-backend-bin-ubuntu-22.04
#
#      - name: Set up QEMU 🧞
#        uses: docker/setup-qemu-action@v2
#
#      - name: Set up Docker Buildx 🪄
#        uses: docker/setup-buildx-action@v2
#
#      - name: Docker meta 📄
#        id: meta
#        uses: docker/metadata-action@v4
#        with:
#          images: ${{ matrix.docker-repo }}/${{ matrix.target }}
#          flavor: |
#            latest=true
#          tags: |
#            type=schedule,pattern={{date 'YYYY-MM-DD'}},prefix=nightly-
#            type=pep440,pattern={{version}},prefix=${{ inputs.network }}-
#            type=raw,value=${{ github.sha }}
#            type=raw,value=${{ inputs.network }}
#            type=ref,event=branch
#            type=ref,event=tag
#            type=ref,event=pr
#
#      - name: Login to DockerHub 🔑
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.CF_DOCKERHUB_USERNAME }}
#          password: ${{ secrets.CF_DOCKERHUB_TOKEN }}
#
#      - name: Build and push 🏗️🫸
#        uses: docker/build-push-action@v4
#        with:
#          context: .
#          push: true
#          tags: ${{ steps.meta.outputs.tags }}
#          cache-from: type=gha
#          cache-to: type=gha,mode=max
#          file: ${{ needs.set-dockerfile-name.outputs.dockerfile_path }}/${{ matrix.target }}.Dockerfile
#          build-args: |
#            BUILD_DATETIME=${{ needs.get-date-time.outputs.date }} ${{ needs.get-date-time.outputs.time }}
#            VCS_REF=${{ github.sha }}
#            CHAINSPEC=${{ inputs.network }}
